#!/bin/bash

if [ "$#" == "0" ]; then
	exit 1
fi

while (( "$#" )); do
	if [ $1 == "-eid" ]; then
		EXPERIMENT_ID=$2
	elif [ $1 == "-n" ]; then
		IDENTICAL_FILTERS=$2
	elif [ $1 == "-fp" ]; then
		FILTER_PARALLELISM=$2
	elif [ $1 == "-ns" ]; then
		NODE_SHARING=$2
	elif [ $1 == "-i" ]; then
		EACH_LETTER_TIMES=$2 # This x 4 = input size
	elif [ $1 == "-ttl" ]; then
		TIME_TO_LIVE=$2 # cluster uptime in Seconds
	fi
	shift
	shift
done
echo $EXPERIMENT_ID

# Fixed vars
EXPECTED_OUTPUT_LINES=4 # 1 line per triple in the output
JVM_ARGS=-Xmx2G # conflict with MAVEN_OPTS (Xmx and maxPermSize) in bash_profile
ITERATIONS=1 # measurements to take (for mean and variance)

# Set paths
PROJECT_PATH=/Users/user/storm/reteonstorm
SCRIPTS_PATH=${PROJECT_PATH}/scripts
LOGS_PATH=${PROJECT_PATH}/logs
MAVEN_JAR=${PROJECT_PATH}/target/reteonstorm-1.0-SNAPSHOT-jar-with-dependencies.jar
#also STORM_LIBS set in bash_profile
SUMMARY_FILE=${LOGS_PATH}/summary_${EXPERIMENT_ID}
TRIPLES_FILE=${PROJECT_PATH}/resources/abcd

# Create/Replace summary file and append variables before executing
echo "TRIPLES_FILE=$TRIPLES_FILE" \
	> $SUMMARY_FILE
echo "IDENTICAL_FILTERS=$IDENTICAL_FILTERS" \
	>> $SUMMARY_FILE
echo "FILTER_PARALLELISM=$FILTER_PARALLELISM" \
	>> $SUMMARY_FILE
echo "NODE_SHARING=$NODE_SHARING" \
	>> $SUMMARY_FILE
echo "EACH_LETTER_TIMES=$EACH_LETTER_TIMES - input_size=`expr $EACH_LETTER_TIMES \* 4`" \
	>> $SUMMARY_FILE
echo "TIME_TO_LIVE=$TIME_TO_LIVE" \
	>> $SUMMARY_FILE
echo "EXPECTED_OUTPUT_LINES=$EXPECTED_OUTPUT_LINES" \
	>> $SUMMARY_FILE
echo "JVM_ARGS=$JVM_ARGS - MAVEN_OPTS=$MAVEN_OPTS" \
	>> $SUMMARY_FILE
echo >> $SUMMARY_FILE #newline

# Generate the input file
$SCRIPTS_PATH/genTriples.py $EACH_LETTER_TIMES \
	> $TRIPLES_FILE

for i in `seq 1 $ITERATIONS`
do
echo iteration $i
	# Append iteration id to summary file
	echo "ITERATION=$i" \
		>> $SUMMARY_FILE

	# Execute and create log file
	LOG_FILE="${LOGS_PATH}/${EXPERIMENT_ID}-${i}"

	java $JVM_ARGS -cp ${MAVEN_JAR}:${STORM_LIBS} org.reteonstorm.TopologyMain \
		-f $TRIPLES_FILE \
		-ns $NODE_SHARING \
		-n $IDENTICAL_FILTERS \
		-fp $FILTER_PARALLELISM \
		-ttl $TIME_TO_LIVE \
			> $LOG_FILE

	# Append summary to summary file
	$SCRIPTS_PATH/summary $LOG_FILE -o $EXPECTED_OUTPUT_LINES \
		>> $SUMMARY_FILE
done
echo experiment done
