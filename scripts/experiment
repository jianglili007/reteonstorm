#!/bin/bash

BUILD_LOG=${ROS_LOGS}/mvn_build_log

if [ "$1" == "-c" ]; then
    cd $RETEONSTORM
    echo "Compiling..."
    if mvn clean install > $BUILD_LOG ; then
        echo "mvn build success"
    else
        cat $BUILD_LOG
        exit
    fi
elif [ "$1" == "-c!" ]; then
    echo "reusing previously build jar"
else
    echo "Missing argument: Re-run using either -c or -c! "
    exit
fi
    
more=false

# input-size dependent arrays #50000 #500
SIZE=( 10000 ) 
TIME=( 70 ) 

if $more ; then
    i=1
    for s in `seq 1 1`;do # append values for indexes 1..x
        SIZE[$i]=`expr $s \* 10000`
        TIME[$i]=10 # `echo "($s+0)*30" | bc`
        (( i++ ))
    done
fi

# input-size independent arrays
TPAR=( 1 )
FPAR=( 1 )
SPAR=( 2 )
SHARE=( all_emit_once nothing )
FILTER=( "?a_?b_?c^?a_foo_?c" )
DEFAULT_TERMINALS=1 #in case FILTER[i] is ""

for (( i=0; i<${#SIZE[@]}; i++ ));do
 for filter in ${FILTER[@]};do
  for tpar in ${TPAR[@]};do
   for fpar in ${FPAR[@]};do
    for spar in ${SPAR[@]};do
     for share in ${SHARE[@]};do

#if [ $fpar -eq 1 ] && [ $tpar -eq 2 ]; then continue; fi

#why not just check for the word "none" since I'm not using "" anymore?
filters=(${filter//^/ })
numFilters=${#filters[@]}
if [ $numFilters -eq 0 ]; then
 numTerms=$DEFAULT_TERMINALS
else
 numTerms=$numFilters
fi

       date
           
        # this iteration is a single measurement
        # each measurement runs reteonstorm a few times and produces a single summary file
        # each "different" measurement should be given a different id (-mid)
        # giving the same -mid would overwrite the previous logs and log-summary
        
        ${ROS_SCRIPTS}/measure \
         -ns $share \
         -F $filter \
         -n $numTerms \
         -sp $spar \
         -fp $fpar \
         -tp $tpar \
         -i ${SIZE[$i]} \
         -ttl ${TIME[$i]} \
         -mid "nodes${numTerms}_share${share}_filter${filter}_spar${spar}_fpar${fpar}_tpar${tpar}_size${SIZE[$i]}"
     done
    done
   done
  done
 done
done
echo "experiment done."
