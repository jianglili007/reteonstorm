#!/bin/bash

JVM_ARGS=-Xmx2G # conflict with MAVEN_OPTS (Xmx and maxPermSize) in bash_profile
MAVEN_JAR=${RETEONSTORM}/target/reteonstorm-1.0-SNAPSHOT-jar-with-dependencies.jar
SUBJECTSxPREDICATES=6 # Subjects and Objects are hard-coded in TopologyMain
ITERATION_START=1 # iteration becomes part of the log filename so start/end with different numbers
ITERATION_END=4 # to avoid overwriting identical measurements and make possible to take the average later
#TRIPLES_FILE=${RETEONSTORM}/resources/abcd
#EXPECTED_OUTPUT_LINES=4 # 1 line per triple in the output

while (( "$#" )) ; do
	if [ $1 == "-mid" ]; then
		MEASUREMENT_ID=$2
	elif [ $1 == "-n" ]; then
		IDENTICAL_FILTERS=$2
	elif [ $1 == "-ns" ]; then
		NODE_SHARING=$2
	elif [ $1 == "-F" ]; then
		FILTER=$2
	elif [ $1 == "-sp" ]; then
		SPOUT_PARALLELISM=$2
	elif [ $1 == "-fp" ]; then
		FILTER_PARALLELISM=$2
	elif [ $1 == "-tp" ]; then
		TERMINAL_PARALLELISM=$2
	elif [ $1 == "-i" ]; then
		NUM_OF_OBJECTS=$2 # This x 4 = input size
	elif [ $1 == "-ttl" ]; then
		TIME_TO_LIVE=$2 # cluster uptime in Seconds
	fi
	shift; shift
done

SUMMARY_FILE=${ROS_LOGS}/summary_${MEASUREMENT_ID}
echo $SUMMARY_FILE

cat <<-EOF						>> $SUMMARY_FILE
	NUM_OF_OBJECTS=$NUM_OF_OBJECTS - input_size=`expr $NUM_OF_OBJECTS \* $SUBJECTSxPREDICATES`
	TIME_TO_LIVE=$TIME_TO_LIVE
	JVM_ARGS=$JVM_ARGS - MAVEN_OPTS=$MAVEN_OPTS

	EOF
	#EXPECTED_OUTPUT_LINES=$EXPECTED_OUTPUT_LINES

# Generate the input file
# ${ROS_SCRIPTS}/generate_triples.py $NUM_OF_OBJECTS 	> $TRIPLES_FILE

for i in `seq $ITERATION_START $ITERATION_END` ; do
	echo "ITERATION=$i" 				>> $SUMMARY_FILE

	LOG_FILE="${ROS_LOGS}/${MEASUREMENT_ID}-${i}"
	echo $LOG_FILE

	java $JVM_ARGS -cp ${MAVEN_JAR} org.reteonstorm.TopologyMain \
		-n $IDENTICAL_FILTERS \
		-ns $NODE_SHARING \
		-F $FILTER \
		-sp $SPOUT_PARALLELISM \
		-fp $FILTER_PARALLELISM \
		-tp $TERMINAL_PARALLELISM \
		-i $NUM_OF_OBJECTS \
		-ttl $TIME_TO_LIVE 			> $LOG_FILE
			# -f $TRIPLES_FILE
			# :${STORM_LIBS}
	
	cat <<-EOF 					>> $SUMMARY_FILE
		`${ROS_SCRIPTS}/summary $LOG_FILE -c $IDENTICAL_FILTERS`
		
		EOF
done
echo "measurement done."
